{
  "openapi": "3.0.1",
  "info": {
    "title": "MoanaJobApplicationApi",
    "version": "1.0"
  },
  "paths": {
    "/Authentication/SignIn": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Responsible for logging in and requesting the JWT authorization token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentialRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentialRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentialRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Fail: Wrong username or password"
          },
          "200": {
            "description": "Ok: User signed in successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Authentication/SignUp": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Responsible for registering the user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentialRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentialRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok: User signed up successfully"
          },
          "400": {
            "description": "Fail: Email address already exists"
          }
        }
      }
    },
    "/Authentication/SignInTest": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Allows the developer to test the JWT authorization token",
        "responses": {
          "401": {
            "description": "Fail: Wrong JWT Bearer token"
          },
          "200": {
            "description": "Ok: JWT authentication was successful",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SignInTestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInTestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInTestResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/Cards/Add": {
      "post": {
        "tags": [
          "Cards"
        ],
        "summary": "Adds a new card to the database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddCardRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Fail: Wrong JWT Bearer token"
          },
          "200": {
            "description": "Ok: New card addedd successfully"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/Cards/GetAll": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Gets all the cards",
        "responses": {
          "401": {
            "description": "Fail: Wrong JWT Bearer token"
          },
          "200": {
            "description": "Ok: All cards retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllCardResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllCardResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllCardResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/Cards/GetById": {
      "get": {
        "tags": [
          "Cards"
        ],
        "summary": "Gets a specific card by its guid",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Fail: Wrong JWT Bearer token"
          },
          "404": {
            "description": "Fail: Card does not exist"
          },
          "200": {
            "description": "Ok: Specific card data retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetCardResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCardResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCardResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/Cards/Delete": {
      "delete": {
        "tags": [
          "Cards"
        ],
        "summary": "Deletes a specific card by its guid",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCardRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Fail: Wrong JWT Bearer token"
          },
          "404": {
            "description": "Fail: Card does not exist"
          },
          "200": {
            "description": "Ok: Card deleted successfully"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/Cards/Update": {
      "put": {
        "tags": [
          "Cards"
        ],
        "summary": "Updates a specific card",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Fail: Wrong JWT Bearer token"
          },
          "200": {
            "description": "Ok: Card updated successfully"
          },
          "404": {
            "description": "Fail: Card / Asignee does not exist"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/Info/Status": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Gets the Greetings message indication whether the API works or not",
        "responses": {
          "200": {
            "description": "Ok: Status data retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Info/Swagger": {
      "get": {
        "tags": [
          "Info"
        ],
        "summary": "Gets the Swagger API descriptor",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/Users/GetAll": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Lists all the users",
        "responses": {
          "200": {
            "description": "Ok: All cards retrieved successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllUserResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllUserResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetAllUserResponse"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AddCardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeleteCardRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "GetAllCardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetAllUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetCardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid"
          },
          "asigneeId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SignInTestResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "Status": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "StatusResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "versionNumber": {
            "type": "string",
            "nullable": true
          },
          "databaseConnection": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCardRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          },
          "asigneeId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "UserCredentialRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme\nEnter your token in the text input below",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Responsible for the JWT (OAuth2.0) authentication"
    },
    {
      "name": "Cards",
      "description": "Responsible for the Card entity related CRUD operations"
    },
    {
      "name": "Info",
      "description": "Provides information about the API: swagger descriptor, status, version number, database connection"
    },
    {
      "name": "Users",
      "description": "Responsible for the User entity related CRUD operations."
    }
  ]
}